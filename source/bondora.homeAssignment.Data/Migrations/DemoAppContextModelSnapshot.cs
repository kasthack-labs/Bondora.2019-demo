// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bondora.homeAssignment.Data;

namespace bondora.homeAssignment.Data.Migrations
{
    [DbContext(typeof(DemoAppContext))]
    partial class DemoAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1");

            modelBuilder.Entity("bondora.homeAssignment.Data.CartItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Amount");

                    b.Property<bool>("Deleted");

                    b.Property<long>("ProductId");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.Property<string>("PricingFormula");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Deleted = false,
                            Name = "Heavy equipment",
                            PricingFormula = "OneTime + Premium * duration"
                        },
                        new
                        {
                            Id = 2L,
                            Deleted = false,
                            Name = "Regular equipment",
                            PricingFormula = "OneTime + min(duration, 2) * Premium + max(0, duration - 2) * Regular"
                        },
                        new
                        {
                            Id = 3L,
                            Deleted = false,
                            Name = "Specialized equipment",
                            PricingFormula = "min(duration, 3) * Premium + max(0, duration - 3) * Regular"
                        });
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.CategoryLoyaltyProgram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("BonusPointId");

                    b.Property<long>("BonusPointsId");

                    b.Property<bool>("Deleted");

                    b.Property<long>("ProductCategoryId");

                    b.HasKey("Id");

                    b.HasIndex("BonusPointId");

                    b.HasIndex("ProductCategoryId")
                        .IsUnique();

                    b.ToTable("CategoryBonusPoints");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BonusPointsId = 2L,
                            Deleted = false,
                            ProductCategoryId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            BonusPointsId = 1L,
                            Deleted = false,
                            ProductCategoryId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            BonusPointsId = 1L,
                            Deleted = false,
                            ProductCategoryId = 3L
                        });
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.LoyaltyProgram", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<string>("Formula");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("BonusPoints");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Deleted = false,
                            Formula = "1",
                            Name = "Regular bonus program"
                        },
                        new
                        {
                            Id = 2L,
                            Deleted = false,
                            Formula = "2",
                            Name = "Heavy equipment bonus program"
                        });
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.Price", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.Property<decimal>("Value");

                    b.HasKey("Id");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Deleted = false,
                            Name = "OneTime",
                            Value = 100m
                        },
                        new
                        {
                            Id = 2L,
                            Deleted = false,
                            Name = "Regular",
                            Value = 40m
                        },
                        new
                        {
                            Id = 3L,
                            Deleted = false,
                            Name = "Premium",
                            Value = 100m
                        });
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("CategoryId");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Deleted = false,
                            Image = "https://i.imgur.com/XmUfJ41.png",
                            Name = "Caterpillar bulldozer"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 2L,
                            Deleted = false,
                            Image = "https://i.imgur.com/8bP88dn.png",
                            Name = "KamAZ truck"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            Deleted = false,
                            Image = "https://i.imgur.com/JUH91Xj.png",
                            Name = "Komatsu crane"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 2L,
                            Deleted = false,
                            Image = "https://i.imgur.com/um0dalY.png",
                            Name = "Volvo steamroller"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 3L,
                            Deleted = false,
                            Image = "https://i.imgur.com/AilecFp.png",
                            Name = "Bosch jackhammer"
                        });
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.CartItem", b =>
                {
                    b.HasOne("bondora.homeAssignment.Data.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bondora.homeAssignment.Data.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.CategoryLoyaltyProgram", b =>
                {
                    b.HasOne("bondora.homeAssignment.Data.LoyaltyProgram", "BonusPoint")
                        .WithMany()
                        .HasForeignKey("BonusPointId");

                    b.HasOne("bondora.homeAssignment.Data.Category", "ProductCategory")
                        .WithOne("BonusPoints")
                        .HasForeignKey("bondora.homeAssignment.Data.CategoryLoyaltyProgram", "ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bondora.homeAssignment.Data.Product", b =>
                {
                    b.HasOne("bondora.homeAssignment.Data.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
